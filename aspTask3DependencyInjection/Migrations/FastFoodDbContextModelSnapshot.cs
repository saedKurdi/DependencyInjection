// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspTask3DependencyInjection.Contexts;

namespace aspTask3DependencyInjection.Migrations
{
    [DbContext(typeof(FastFoodDbContext))]
    partial class FastFoodDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("aspTask3DependencyInjection.Entities.Concretes.FastFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ccal")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_FastFoods_Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_FastFoods_Name");

                    b.ToTable("FastFoods");

                    b.HasCheckConstraint("CK_FastFoods_Name", "LEN(Name) BETWEEN 3 AND 15");

                    b.HasCheckConstraint("CK_FastFoods_Price", "Price BETWEEN 1 AND 50");

                    b.HasCheckConstraint("CK_FastFoods_Discount", "Discount BETWEEN 0 AND 100");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ccal = 300.0,
                            Description = "Delicious beef burger",
                            Discount = 5,
                            ImagePath = "images/burger.jpg",
                            Name = "Burger",
                            Price = 12
                        },
                        new
                        {
                            Id = 2,
                            Ccal = 400.0,
                            Description = "Cheesy pizza",
                            Discount = 20,
                            ImagePath = "images/pizza.jpeg",
                            Name = "Pizza",
                            Price = 30
                        },
                        new
                        {
                            Id = 3,
                            Ccal = 100.0,
                            Description = "Crispy Fries",
                            Discount = 4,
                            ImagePath = "images/fries.jpeg",
                            Name = "Fries",
                            Price = 4
                        },
                        new
                        {
                            Id = 4,
                            Ccal = 200.0,
                            Description = "Turkish Pizza",
                            Discount = 6,
                            ImagePath = "images/lahmacun.jpeg",
                            Name = "Lahmacun",
                            Price = 4
                        },
                        new
                        {
                            Id = 5,
                            Ccal = 300.0,
                            Description = "Turkish Donerrr",
                            Discount = 0,
                            ImagePath = "images/doner.jpeg",
                            Name = "Doner",
                            Price = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
